<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.11.1 on win32)" generated="20221227 18:37:52.124" rpa="false" schemaversion="3">
<suite id="s1" name="usersTest" source="c:\Users\pamela.almeida\workspace-pam\goRest-project\src\test\users-test\usersTest.robot">
<kw name="Conectar na API" library="commonResource" type="SETUP">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>content-type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221227 18:37:53.413" level="INFO">${headers} = {'content-type': 'application/json'}</msg>
<status status="PASS" starttime="20221227 18:37:53.412" endtime="20221227 18:37:53.415"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>alias=goRestAPI</arg>
<arg>url=${BASE_URL}</arg>
<arg>headers=${headers}</arg>
<arg>verify=true</arg>
<arg>disable_warnings=1</arg>
<arg>proxies=htpps</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20221227 18:37:53.417" level="INFO">Creating Session using : alias=goRestAPI, url=https://gorest.co.in/public/v2, headers={'content-type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=htpps, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20221227 18:37:53.416" endtime="20221227 18:37:53.417"/>
</kw>
<status status="PASS" starttime="20221227 18:37:53.412" endtime="20221227 18:37:53.418"/>
</kw>
<test id="s1-t1" name="PAM_02 - Não deve cadastrar usuário com email que já esteja cadastrado na API" line="34">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>content-type=application/json</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221227 18:37:53.421" level="INFO">${headers} = {'content-type': 'application/json', 'Authorization': 'Bearer 1f83cca3849584e3ce5d701480dd8ef6a15a64d8a1ee0c14ae166b72a083d5f1'}</msg>
<status status="PASS" starttime="20221227 18:37:53.421" endtime="20221227 18:37:53.422"/>
</kw>
<kw name="Gerar dados de usuário" library="helpers">
<var>${primeiro_usuario}</var>
<kw name="Gerar nome" library="helpers">
<var>${nome}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20221227 18:37:53.425" level="INFO">${nome} = Julie Wilson</msg>
<status status="PASS" starttime="20221227 18:37:53.424" endtime="20221227 18:37:53.427"/>
</kw>
<msg timestamp="20221227 18:37:53.427" level="INFO">${nome} = Julie Wilson</msg>
<status status="PASS" starttime="20221227 18:37:53.424" endtime="20221227 18:37:53.427"/>
</kw>
<kw name="Gerar email" library="helpers">
<var>${email}</var>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20221227 18:37:53.428" level="INFO">${email} = nle@example.com</msg>
<status status="PASS" starttime="20221227 18:37:53.428" endtime="20221227 18:37:53.428"/>
</kw>
<msg timestamp="20221227 18:37:53.428" level="INFO">${email} = nle@example.com</msg>
<status status="PASS" starttime="20221227 18:37:53.427" endtime="20221227 18:37:53.428"/>
</kw>
<kw name="Gerar genero" library="helpers">
<var>${genero}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${genero}</var>
<arg>random.choice(${generos})</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221227 18:37:53.430" level="INFO">${genero} = male</msg>
<status status="PASS" starttime="20221227 18:37:53.429" endtime="20221227 18:37:53.430"/>
</kw>
<msg timestamp="20221227 18:37:53.431" level="INFO">${genero} = male</msg>
<status status="PASS" starttime="20221227 18:37:53.429" endtime="20221227 18:37:53.431"/>
</kw>
<kw name="Gerar status de usuário" library="helpers">
<var>${status}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${status_usuario}</var>
<arg>random.choice(${status_validos_usuario})</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221227 18:37:53.433" level="INFO">${status_usuario} = active</msg>
<status status="PASS" starttime="20221227 18:37:53.432" endtime="20221227 18:37:53.433"/>
</kw>
<msg timestamp="20221227 18:37:53.434" level="INFO">${status} = active</msg>
<status status="PASS" starttime="20221227 18:37:53.431" endtime="20221227 18:37:53.434"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${usuario}</var>
<arg>name=${nome}</arg>
<arg>email=${email}</arg>
<arg>gender=${genero}</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221227 18:37:53.436" level="INFO">${usuario} = {'name': 'Julie Wilson', 'email': 'nle@example.com', 'gender': 'male', 'status': 'active'}</msg>
<status status="PASS" starttime="20221227 18:37:53.434" endtime="20221227 18:37:53.436"/>
</kw>
<msg timestamp="20221227 18:37:53.436" level="INFO">${primeiro_usuario} = {'name': 'Julie Wilson', 'email': 'nle@example.com', 'gender': 'male', 'status': 'active'}</msg>
<status status="PASS" starttime="20221227 18:37:53.423" endtime="20221227 18:37:53.436"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${email}</var>
<arg>${primeiro_usuario}</arg>
<arg>email</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20221227 18:37:53.492" level="INFO">${email} = ['nle@example.com']</msg>
<status status="PASS" starttime="20221227 18:37:53.456" endtime="20221227 18:37:53.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${email[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221227 18:37:53.495" level="INFO">nle@example.com</msg>
<status status="PASS" starttime="20221227 18:37:53.493" endtime="20221227 18:37:53.495"/>
</kw>
<kw name="Enviar uma requisição POST no endpoint de users" library="userResources">
<var>${primeiro_cadastro}</var>
<arg>${primeiro_usuario}</arg>
<arg>${headers}</arg>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>alias=goRestAPI</arg>
<arg>url=${ENDPOINT_USERS}</arg>
<arg>json=${usuario}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20221227 18:37:54.304" level="INFO">POST Request : url=https://gorest.co.in/public/v2/users 
 path_url=/public/v2/users 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Authorization': 'Bearer 1f83cca3849584e3ce5d701480dd8ef6a15a64d8a1ee0c14ae166b72a083d5f1', 'Content-Length': '90'} 
 body=b'{"name": "Julie Wilson", "email": "nle@example.com", "gender": "male", "status": "active"}' 
 </msg>
<msg timestamp="20221227 18:37:54.307" level="INFO">POST Response : url=https://gorest.co.in/public/v2/users 
 status=201, reason=Created 
 headers={'Date': 'Tue, 27 Dec 2022 21:37:32 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0, private, must-revalidate', 'etag': 'W/"145f1f7c24efb8235b3e4d58eac94712"', 'location': 'https://gorest.co.in/public/v2/users/11938', 'referrer-policy': 'strict-origin-when-cross-origin', 'vary': 'Origin', 'x-content-type-options': 'nosniff', 'x-download-options': 'noopen', 'x-frame-options': 'SAMEORIGIN', 'x-permitted-cross-domain-policies': 'none', 'x-ratelimit-limit': '90', 'x-ratelimit-remaining': '88', 'x-ratelimit-reset': '1', 'x-request-id': '23bfc6ba-5b64-4619-aa7a-3ff754902835', 'x-runtime': '0.281592', 'x-xss-protection': '0', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=E%2Fs76GoZAW8%2FfsSDsqjFyc8N3%2FgODDxx9q1IWR4wNnLUFk3Hk6KKB6oWMNm2%2FaSZv25w9YusW76QnJXyMOgyqwHGhdD2lDRw36fyAr4QL8jFIK9WzfVdg1oBR9yn56lNRPpRonc1HYLMx%2B0%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '780532b05e65018d-GRU', 'alt-svc': 'h3=":443"; ma=86400, h3-29=":443"; ma=86400'} 
 body={"id":11938,"name":"Julie Wilson","email":"nle@example.com","gender":"male","status":"active"} 
 </msg>
<msg timestamp="20221227 18:37:54.308" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20221227 18:37:53.496" endtime="20221227 18:37:54.308"/>
</kw>
<msg timestamp="20221227 18:37:54.310" level="INFO">${primeiro_cadastro} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20221227 18:37:53.496" endtime="20221227 18:37:54.311"/>
</kw>
<kw name="Gerar dados de usuário" library="helpers">
<var>${segundo_usuario}</var>
<kw name="Gerar nome" library="helpers">
<var>${nome}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20221227 18:37:54.320" level="INFO">${nome} = Samantha Singleton</msg>
<status status="PASS" starttime="20221227 18:37:54.318" endtime="20221227 18:37:54.320"/>
</kw>
<msg timestamp="20221227 18:37:54.321" level="INFO">${nome} = Samantha Singleton</msg>
<status status="PASS" starttime="20221227 18:37:54.316" endtime="20221227 18:37:54.321"/>
</kw>
<kw name="Gerar email" library="helpers">
<var>${email}</var>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20221227 18:37:54.323" level="INFO">${email} = hensonjulie@example.net</msg>
<status status="PASS" starttime="20221227 18:37:54.322" endtime="20221227 18:37:54.324"/>
</kw>
<msg timestamp="20221227 18:37:54.324" level="INFO">${email} = hensonjulie@example.net</msg>
<status status="PASS" starttime="20221227 18:37:54.321" endtime="20221227 18:37:54.325"/>
</kw>
<kw name="Gerar genero" library="helpers">
<var>${genero}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${genero}</var>
<arg>random.choice(${generos})</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221227 18:37:54.327" level="INFO">${genero} = female</msg>
<status status="PASS" starttime="20221227 18:37:54.326" endtime="20221227 18:37:54.328"/>
</kw>
<msg timestamp="20221227 18:37:54.328" level="INFO">${genero} = female</msg>
<status status="PASS" starttime="20221227 18:37:54.325" endtime="20221227 18:37:54.328"/>
</kw>
<kw name="Gerar status de usuário" library="helpers">
<var>${status}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${status_usuario}</var>
<arg>random.choice(${status_validos_usuario})</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221227 18:37:54.331" level="INFO">${status_usuario} = active</msg>
<status status="PASS" starttime="20221227 18:37:54.329" endtime="20221227 18:37:54.331"/>
</kw>
<msg timestamp="20221227 18:37:54.331" level="INFO">${status} = active</msg>
<status status="PASS" starttime="20221227 18:37:54.329" endtime="20221227 18:37:54.331"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${usuario}</var>
<arg>name=${nome}</arg>
<arg>email=${email}</arg>
<arg>gender=${genero}</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221227 18:37:54.333" level="INFO">${usuario} = {'name': 'Samantha Singleton', 'email': 'hensonjulie@example.net', 'gender': 'female', 'status': 'active'}</msg>
<status status="PASS" starttime="20221227 18:37:54.332" endtime="20221227 18:37:54.333"/>
</kw>
<msg timestamp="20221227 18:37:54.333" level="INFO">${segundo_usuario} = {'name': 'Samantha Singleton', 'email': 'hensonjulie@example.net', 'gender': 'female', 'status': 'active'}</msg>
<status status="PASS" starttime="20221227 18:37:54.313" endtime="20221227 18:37:54.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${segundo_usuario}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221227 18:37:54.335" level="INFO">{'name': 'Samantha Singleton', 'email': 'hensonjulie@example.net', 'gender': 'female', 'status': 'active'}</msg>
<status status="PASS" starttime="20221227 18:37:54.334" endtime="20221227 18:37:54.336"/>
</kw>
<kw name="Update Value To Json" library="JSONLibrary">
<var>${segundo_usuario}</var>
<arg>${segundo_usuario}</arg>
<arg>$.email</arg>
<arg>${email[0]}</arg>
<doc>Update value to JSON using JSONPath</doc>
<msg timestamp="20221227 18:37:54.370" level="INFO">${segundo_usuario} = {'name': 'Samantha Singleton', 'email': 'nle@example.com', 'gender': 'female', 'status': 'active'}</msg>
<status status="PASS" starttime="20221227 18:37:54.336" endtime="20221227 18:37:54.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${segundo_usuario}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221227 18:37:54.372" level="INFO">{'name': 'Samantha Singleton', 'email': 'nle@example.com', 'gender': 'female', 'status': 'active'}</msg>
<status status="PASS" starttime="20221227 18:37:54.371" endtime="20221227 18:37:54.372"/>
</kw>
<kw name="Enviar uma requisição POST no endpoint de users" library="userResources">
<var>${segundo_cadastro}</var>
<arg>${segundo_usuario}</arg>
<arg>${headers}</arg>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>alias=goRestAPI</arg>
<arg>url=${ENDPOINT_USERS}</arg>
<arg>json=${usuario}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20221227 18:37:54.960" level="INFO">POST Request : url=https://gorest.co.in/public/v2/users 
 path_url=/public/v2/users 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Authorization': 'Bearer 1f83cca3849584e3ce5d701480dd8ef6a15a64d8a1ee0c14ae166b72a083d5f1', 'Content-Length': '98'} 
 body=b'{"name": "Samantha Singleton", "email": "nle@example.com", "gender": "female", "status": "active"}' 
 </msg>
<msg timestamp="20221227 18:37:54.961" level="INFO">POST Response : url=https://gorest.co.in/public/v2/users 
 status=422, reason=Unprocessable Entity 
 headers={'Date': 'Tue, 27 Dec 2022 21:37:33 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'referrer-policy': 'strict-origin-when-cross-origin', 'vary': 'Origin', 'x-content-type-options': 'nosniff', 'x-download-options': 'noopen', 'x-frame-options': 'SAMEORIGIN', 'x-permitted-cross-domain-policies': 'none', 'x-ratelimit-limit': '90', 'x-ratelimit-remaining': '89', 'x-ratelimit-reset': '1', 'x-request-id': '6e6300ac-25c4-48e3-b863-93f63d9ab5ed', 'x-runtime': '0.181614', 'x-xss-protection': '0', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=Uqp1ZdWZMp%2FJi083XmbTvAW2uSaOzBoruGYH7JGo46z1nef252ANZSfd0GKe%2BF2hVau%2BwsHB7vxiNNUO78pPazJpdHPA67bDQV2DpC1A44EeYMOHpf%2FUqMGp%2BhtcO3VuvJWQHhWBBXuIvWI%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '780532b51cb7018d-GRU', 'alt-svc': 'h3=":443"; ma=86400, h3-29=":443"; ma=86400'} 
 body=[{"field":"email","message":"has already been taken"}] 
 </msg>
<msg timestamp="20221227 18:37:54.961" level="INFO">${response} = &lt;Response [422]&gt;</msg>
<status status="PASS" starttime="20221227 18:37:54.374" endtime="20221227 18:37:54.962"/>
</kw>
<msg timestamp="20221227 18:37:54.962" level="INFO">${segundo_cadastro} = &lt;Response [422]&gt;</msg>
<status status="PASS" starttime="20221227 18:37:54.373" endtime="20221227 18:37:54.962"/>
</kw>
<kw name="Status code deve ser" library="commonResource">
<arg>422</arg>
<arg>${segundo_cadastro}</arg>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${status_code_esperado}</arg>
<arg>${response.status_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221227 18:37:54.965" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20221227 18:37:54.964" endtime="20221227 18:37:54.965"/>
</kw>
<kw name="Log Many" library="BuiltIn">
<arg>Status code esperado: ${status_code_esperado} - Status code obtido: ${response.status_code}</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<msg timestamp="20221227 18:37:54.967" level="INFO">Status code esperado: 422 - Status code obtido: 422</msg>
<status status="PASS" starttime="20221227 18:37:54.966" endtime="20221227 18:37:54.967"/>
</kw>
<status status="PASS" starttime="20221227 18:37:54.963" endtime="20221227 18:37:54.967"/>
</kw>
<kw name="Get values from JSON" library="RPA.JSON">
<var>${campos}</var>
<arg>${segundo_cadastro.json()}</arg>
<arg>$..field[*]</arg>
<doc>Get all values from a JSON serializable object that match the given expression.</doc>
<msg timestamp="20221227 18:37:54.993" level="INFO">${campos} = ['email']</msg>
<status status="PASS" starttime="20221227 18:37:54.968" endtime="20221227 18:37:54.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${campos}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221227 18:37:54.995" level="INFO">['email']</msg>
<status status="PASS" starttime="20221227 18:37:54.994" endtime="20221227 18:37:54.995"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${campos}</arg>
<arg>email</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20221227 18:37:54.996" endtime="20221227 18:37:54.996"/>
</kw>
<kw name="Get values from JSON" library="RPA.JSON">
<var>${mensagens}</var>
<arg>${segundo_cadastro.json()}</arg>
<arg>$..message[*]</arg>
<doc>Get all values from a JSON serializable object that match the given expression.</doc>
<msg timestamp="20221227 18:37:55.022" level="INFO">${mensagens} = ['has already been taken']</msg>
<status status="PASS" starttime="20221227 18:37:54.997" endtime="20221227 18:37:55.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${mensagens}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221227 18:37:55.022" level="INFO">['has already been taken']</msg>
<status status="PASS" starttime="20221227 18:37:55.022" endtime="20221227 18:37:55.024"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${mensagens}</arg>
<arg>${valor_duplicado}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20221227 18:37:55.024" endtime="20221227 18:37:55.024"/>
</kw>
<doc>Caso de Teste pra validar que dois usuários não são cadastrados com mesmo email</doc>
<tag>cadastroUsuario</tag>
<tag>negativo</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20221227 18:37:53.418" endtime="20221227 18:37:55.026"/>
</test>
<status status="PASS" starttime="20221227 18:37:52.132" endtime="20221227 18:37:55.026"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">cadastroUsuario</stat>
<stat pass="1" fail="0" skip="0">negativo</stat>
<stat pass="1" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="usersTest">usersTest</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
